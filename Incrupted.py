import os
import re
import telebot

# –í–∞—à —Ç–æ–∫–µ–Ω
API_TOKEN = '8060632074:AAGiUoZn6vkKl-_qON8rBofw8F2CjQEsQOI'
bot = telebot.TeleBot(API_TOKEN)

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
DATABASE_FOLDER = '/storage/emulated/0/–ê_MyFullSourceGlaz/MyTestBD'

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞–º–∏ –ø–æ–∏—Å–∫–∞
SEARCH_MODE = 'search_mode'

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –•—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
all_numbers = set()

# –°–ø–∏—Å–æ–∫ –∫–æ–¥–∏—Ä–æ–≤–æ–∫ –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
ENCODINGS = ['utf-8', 'windows-1251', 'ISO-8859-1', 'utf-16']

def read_file_with_encodings(file_path):
    """–ü—Ä–æ–±—É–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–¥–∏—Ä–æ–≤–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä–∞ –≤ –≤–∏–¥–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞."""
    numbers = set()
    for encoding in ENCODINGS:
        try:
            with open(file_path, 'r', encoding=encoding, errors='ignore') as file:
                for line in file:
                    cleaned_line = clean_phone_number(line.strip())
                    numbers.add(cleaned_line)  # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
            break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω
        except Exception:
            continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–¥–∏—Ä–æ–≤–∫–µ, –µ—Å–ª–∏ —á—Ç–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
    return numbers

def clean_phone_number(phone_number):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ –∑–Ω–∞–∫–∞ '+' –∏–∑ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""
    return re.sub(r'[^0-9+]', '', phone_number)  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –∑–Ω–∞–∫ '+'

def load_numbers_from_folder(folder_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–º–µ—Ä–∞ –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ."""
    global all_numbers  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é all_numbers
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã
            numbers = read_file_with_encodings(file_path)
            if numbers is not None:
                all_numbers.update(numbers)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –æ–±—â–µ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∏–∑ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç—å
load_numbers_from_folder(DATABASE_FOLDER)
print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–º–µ—Ä–æ–≤: {len(all_numbers)}")  # –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')

@bot.message_handler(commands=['search'])
def search(message):
    user_states[message.chat.id] = SEARCH_MODE
    bot.reply_to(message, 'üîç –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.')

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_state = user_states.get(message.chat.id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_state == SEARCH_MODE:
        find_phone(message)
    else:
        bot.reply_to(message, '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞.')

def find_phone(message):
    phone_number = message.text.strip()
    cleaned_number = clean_phone_number(phone_number)  # –û—á–∏—â–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä

    bot.reply_to(message, '‚è≥ –ò–¥–µ—Ç –ø–æ–∏—Å–∫... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞

    if cleaned_number in all_numbers:
        bot.reply_to(message, '‚úÖ –ù–æ–º–µ—Ä –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
    else:
        bot.reply_to(message, '‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
    user_states[message.chat.id] = None

if __name__ == '__main__':
    bot.polling(none_stop=True)
